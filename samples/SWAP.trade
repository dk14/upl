—- Interest Rate Swap Trade 
—- http://www.fpml.org/spec/fpml-5-0-8-rec-1/html/confirmation/xml/products/interest-rate-derivatives/ird-ex02-stub-amort-swap.xml

new trade TRADE_ID

name DB_LN id PARTYAUS33 
name Barclays id BARCGB2L

rollConvention “14” —- it’s not name, just part of DSL
dayCountFraction “ACT/360”

DB_LN from 12/14/1995 to 12/14/1999 (MODFOLLOWING) will pay EUR-LIBOR-BBA every year 
   recalculate rate twice a year
   calendar GBLO

Barclays will pay 0.06 * 50M$ every year
   (40M at 12/14/1995, 30M next year, 20M next year, 10M next year)
   calendar DEFR

—- context-free grammar:
—- def stream = party ~ (“from” ~ fromDate ~ fromBusinessDayConvention? ~ “to” ~ toDate ~  toBusinessDayConvention?)? ~ “will pay” ~ (fixed | floating) ~ “every” ~ period ~ recalculate?
—- def fixed = fixedRate ~ “*” ~ notional
—- def floating = floatingRateIndex
-- def schedule = "(" ~> repsep(not ~ date, ",") <~ ")"

—- post-events:

amend TRADE_ID with notional 100500$

confirm TRADE_ID

allocate trade TRADE_ID for notional 10M + 30M + 10M for DB_LN to UBS, Barclays, City

